# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Media {
  url: String!
  id: Float!
  path: String!
  name: String!
}

type LogBook {
  id: Float!
  name: String!
  user_id: String!
  description: String!
  owner: User!
}

type User {
  cover: Media
  followersCount: Float!
  uid: String!
  name: String!
  coverMedia: Float!
  isPublic: Boolean!
  followedUsers: [User!]!
  logBooks: [LogBook!]!
}

type AuthType {
  user: User!
  token: String!
}

type Recommendation {
  id: Float!
  type: String!
  value: String!
  user_id: String!
}

type TourProfile {
  values: JSON!
  id: Float!
  user_id: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Tour {
  id: Float!
  name: String!
  user_id: String!
  tour_profile_id: Float!
  is_public: Boolean!
  description: String!
}

type Report {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Comment {
  id: Float!
  comment_id: Float!
  text: String!
}

type Vote {
  id: Float!
  user_id: String!
  is_public: Boolean!
}

type ImageEntry {
  id: Float!
  media_fk: Float!
  location: String!
  entry_fk: Float!
  image: Media!
}

type VideoEntry {
  id: Float!
  media_id: Float!
  entry_id: Float!
  location: String!
}

type LocationEntry {
  id: Float!
  location: String!
  entry_fk: Float!
}

type TextEntry {
  id: Float!
  text: String!
  entry_fk: Float!
}

type Entry {
  id: Float!
  order_in_list: Float!
  date: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  indexUsers: [User!]!
  getUser(id: String!): User
  logBook(id: Int!): LogBook!
  recommendation(id: Int!): Recommendation!
  report(id: Int!): Report!
  comment(id: Int!): Comment!
  vote(id: Int!): Vote!
  imageEntry(id: Int!): ImageEntry!
  videoEntry(id: Int!): VideoEntry!
  locationEntry(id: Int!): LocationEntry!
  textEntry(id: Int!): TextEntry!
  entry(id: Int!): Entry!
  tour(id: Int!): Tour!
  tourProfile(id: Int!): TourProfile!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, id: String!): User!
  deleteUser(id: String!): String!
  followUser(target: String!, id: String!): Boolean!
  createLogBook(createLogBookInput: CreateLogBookInput!): LogBook!
  updateLogBook(updateLogBookInput: UpdateLogBookInput!, id: Float!): LogBook!
  removeLogBook(id: Int!): Boolean!
  login(data: AuthInput!): AuthType!
  createRecommendation(createRecommendationInput: CreateRecommendationInput!): Recommendation!
  updateRecommendation(updateRecommendationInput: UpdateRecommendationInput!, id: Float!): Recommendation!
  removeRecommendation(id: Int!): Recommendation!
  createReport(createReportInput: CreateReportInput!): Report!
  updateReport(updateReportInput: UpdateReportInput!): Report!
  removeReport(id: Int!): Report!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!, id: Float!): Comment!
  removeComment(id: Int!): Comment!
  createVote(createVoteInput: CreateVoteInput!): Vote!
  updateVote(updateVoteInput: UpdateVoteInput!, id: Float!): Vote!
  removeVote(id: Int!): Vote!
  createImageEntry(createImageEntryInput: CreateImageEntryInput!): ImageEntry!
  updateImageEntry(updateImageEntryInput: UpdateImageEntryInput!, id: Float!): ImageEntry!
  removeImageEntry(id: Int!): ImageEntry!
  createVideoEntry(createVideoEntryInput: CreateVideoEntryInput!): VideoEntry!
  updateVideoEntry(updateVideoEntryInput: UpdateVideoEntryInput!, id: Float!): VideoEntry!
  removeVideoEntry(id: Int!): VideoEntry!
  createLocationEntry(createLocationEntryInput: CreateLocationEntryInput!): LocationEntry!
  updateLocationEntry(updateLocationEntryInput: UpdateLocationEntryInput!, id: Float!): LocationEntry!
  removeLocationEntry(id: Int!): LocationEntry!
  createTextEntry(createTextEntryInput: CreateTextEntryInput!): TextEntry!
  updateTextEntry(updateTextEntryInput: UpdateTextEntryInput!, id: Float!): TextEntry!
  removeTextEntry(id: Int!): TextEntry!
  createEntry(createEntryInput: CreateEntryInput!): Entry!
  updateEntry(updateEntryInput: UpdateEntryInput!, id: Float!): Entry!
  removeEntry(id: Int!): Entry!
  createTour(createTourInput: CreateTourInput!): Tour!
  updateTour(updateTourInput: UpdateTourInput!, id: Float!): Tour!
  removeTour(id: Int!): Tour!
  createTourProfile(createTourProfileInput: CreateTourProfileInput!): TourProfile!
  updateTourProfile(updateTourProfileInput: UpdateTourProfileInput!, id: Float!): TourProfile!
  removeTourProfile(id: Int!): TourProfile!
}

input CreateUserInput {
  name: String!
  uid: String!
  coverMedia: Float
  isPublic: Boolean
}

input UpdateUserInput {
  name: String
  uid: String
  isPublic: Boolean
  coverMedia: Float
}

input CreateLogBookInput {
  name: String!
  user_id: String!
  tour_id: Float
  description: String!
}

input UpdateLogBookInput {
  name: String
  user_id: String
  tour_id: Float
  description: String
}

input AuthInput {
  email: String!
  password: String!
}

input CreateRecommendationInput {
  type: String!
  value: String!
  user_id: String!
}

input UpdateRecommendationInput {
  type: String
  value: String
  user_id: String
}

input CreateReportInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateReportInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCommentInput {
  comment_id: Float!
  text: String!
}

input UpdateCommentInput {
  comment_id: Float
  text: String
}

input CreateVoteInput {
  user_id: String!
  is_public: Boolean!
}

input UpdateVoteInput {
  user_id: String
  is_public: Boolean
}

input CreateImageEntryInput {
  media_fk: Float!
  location: String!
  entry_fk: Float!
}

input UpdateImageEntryInput {
  media_fk: Float
  location: String
  entry_fk: Float
}

input CreateVideoEntryInput {
  media_id: Float!
  entry_id: Float!
  location: String!
}

input UpdateVideoEntryInput {
  media_id: Float
  entry_id: Float
  location: String
}

input CreateLocationEntryInput {
  location: String!
  entry_fk: Float!
}

input UpdateLocationEntryInput {
  location: String
  entry_fk: Float
}

input CreateTextEntryInput {
  text: String!
  entry_fk: Float!
}

input UpdateTextEntryInput {
  text: String
  entry_fk: Float
}

input CreateEntryInput {
  order_in_list: Float!
  date: DateTime!
}

input UpdateEntryInput {
  order_in_list: Float
  date: DateTime
}

input CreateTourInput {
  name: String!
  user_id: String!
  tour_profile_id: Float!
  is_public: Boolean!
  description: String!
}

input UpdateTourInput {
  name: String
  user_id: String
  tour_profile_id: Float
  is_public: Boolean
  description: String
}

input CreateTourProfileInput {
  user_id: String!
}

input UpdateTourProfileInput {
  user_id: String
}
